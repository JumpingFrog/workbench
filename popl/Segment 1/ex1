#lang racket
(define noun-list (list 'dog 'cat 'student 'professor 'book 'computer))

(define verb-list (list 'ran 'ate 'slept 'drank 'exploded 'decomposed))

(define adjective-list (list 'red 'slow 'dead 'pungent 'over-paid 'drunk))

(define adverb-list (list 'quickly 'slowly 'wickedly 'majestically))

(define (sentence)
 (cons  'the (append (noun-phrase) (verb-phrase))))

(define (pick-random lst)
 (list-ref lst (random (length lst))))

(define (a-verb)
  (pick-random verb-list))

(define (a-noun)
  (pick-random noun-list))

(define (an-adverb)
  (pick-random adverb-list))

(define (an-adjective)
  (pick-random adjective-list))

(define (either a b)
 (if (eqv? (random 2) 0) (a) (b) ))

(define (adjective-noun)
  (cons (an-adjective) (noun-phrase)))

(define (verb-adverb)
  (cons  (a-verb) (an-adverb)))

(define (noun-phrase)
  (either a-noun adjective-noun))

(define (verb-phrase)
  (either a-verb verb-adverb))