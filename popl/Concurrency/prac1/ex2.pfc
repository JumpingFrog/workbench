program update2;
	var  C, turn : integer;
	var flag1, flag2: boolean;

process P1;
var l : integer;
begin
	for l := 1 to 20 do
		begin
			flag1 := true;
			turn := 2;
			while flag2 and (turn = 2) do
				null;
			C := C + 1;
			flag1 := false;
		end;
end;

process P2;
var l : integer;
begin
	for l := 1 to 20 do
		begin
			flag2 := true;
			turn := 1;
			while flag1 and (turn = 1) do (*P1 is critical and is not waiting*)
				null;
			C := C + 1;
			flag2 := false;
		end;
end;

begin
	C := 0;
	turn := 1;
	flag1 := false; (*P1 is critical*)
	flag2 := false;  (*P2 is critical*)
	cobegin
		P1;
		P2;
	coend;
	write(C)
end.
