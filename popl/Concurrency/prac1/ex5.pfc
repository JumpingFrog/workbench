program ex5;
	const max = 20;
	var turn : integer;
		chopsticks : array[1..max] of semaphore;
		say : semaphore;

process type Philosopher(o: integer);
begin
	repeat
		begin
			wait(chopsticks[o]);
			wait(chopsticks[(o mod max) + 1]);
			wait(say); (*make speaking mutex *)
			writeln(o, ' is eating.');
			signal(say);
			(*sleep(1);*)
			signal(chopsticks[o]);
			signal(chopsticks[(o mod max) + 1]);
			wait(say);
			writeln(o, ' is thinking.');
			signal(say);
			(*sleep(1);*)
		end;
	forever;
end;

var procs : array[1..max] of Philosopher;
	i : integer;
begin
	for i := 1 to max do
		initial(chopsticks[i], 1);
	initial(say, 1);
	cobegin
		for i:= 1 to max do
			procs[i](i);
	coend;
end.
